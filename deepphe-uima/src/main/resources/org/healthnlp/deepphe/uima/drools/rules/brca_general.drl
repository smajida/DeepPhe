package org.healthnlp.deepphe.uima.drools;

import java.lang.Object;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.ArrayList;

import org.healthnlp.deepphe.util.FHIRUtils;
import org.healthnlp.deepphe.util.FHIRConstants;

import org.healthnlp.deepphe.fhir.fact.Fact;
import org.healthnlp.deepphe.fhir.fact.FactFactory;
import org.healthnlp.deepphe.fhir.fact.FactHelper;

import org.healthnlp.deepphe.fhir.summary.*;
import org.healthnlp.deepphe.uima.drools.*;


import org.apache.ctakes.cancer.owl.OwlConstants;

/**
* sets Diagnosis, histologicType, cancerType
*/

rule "set-Cancer-CancerType"
	salience 45559
	no-loop true
	when
		$record : MedicalRecord()	
		$domain : Domain($domainName : domainName)
		$cancerFact : Fact(summaryType=="CancerSummary", documentType == "RecordSummary", name == $domainName, $cSummary_id : summaryId)
   		Fact(summaryType=="CancerPhenotype", documentType != "RecordSummary", category == "hasCancerType")
	    not(Fact(summaryType=="CancerPhenotype", documentType == "RecordSummary", category == "hasCancerType"))	
	    
	    $cHistFacts : Set()
	    from collect (Fact(summaryType=="CancerPhenotype", documentType != "RecordSummary", category == "hasCancerType"))
	    
	then
		for(Object obj : $cHistFacts){
			Fact cF = (Fact)obj;
			Fact ctf = FactFactory.createFact(cF, "hasCancerType", OwlConstants.BREAST_CANCER_OWL+"#"+cF.getName(), "RecordSummary");
			ctf.setIdentifier($cancerFact.getIdentifier());
			ctf.addProvenanceFact(cF);
			ctf.getContainerIdentifier().clear();
			ctf.addContainerIdentifier($cSummary_id);
			ctf.setSummaryType("CancerPhenotype");
			ctf.setSummaryId("CancerPhenotype-"+$cSummary_id);
			
			FactHelper.addFactToSummary(ctf, $record.getCancerSummary(), $cancerFact.getIdentifier(), OwlConstants.BREAST_CANCER_OWL);
			insert(ctf);
		}
end   

rule "set-Tumor-CancerType"
	salience 45558
	no-loop true
	when
	$record : MedicalRecord()	
	
	    $tF : Fact(summaryType == "TumorSummary", documentType != "RecordSummary", $t_summaryId : summaryId)
	    $tpheF : Fact(summaryType == "TumorPhenotype", documentType != "RecordSummary", category == "hasCancerType", containerIdentifier contains $t_summaryId)
	    IdMapper(oldSummaryId == $t_summaryId, $newSummaryId : newSummaryId)
	    $recordTFact : Fact(documentType == "RecordSummary", summaryType == "TumorSummary", summaryId == $newSummaryId)
	    not(Fact(documentType == "RecordSummary", summaryType == "TumorPhenotype", category == "hasCancerType", provenanceFacts contains $tpheF))

	    
	then
		//tumor level
		
		String newId = "TumorPhenotype-"+$newSummaryId;
		Fact tf = FactFactory.createFact($tpheF, "Condition", OwlConstants.BREAST_CANCER_OWL+"#"+$tpheF.getName(), "RecordSummary");
		tf.setIdentifier(newId);
		tf.addContainerIdentifier($newSummaryId);
		tf.addProvenanceFact($tpheF);
		tf.setSummaryType("TumorPhenotype");
		insert(tf);
		insert(new IdMapper($tpheF.getIdentifier(), newId, $tpheF.getDocumentType(), $tpheF.getSummaryId(), newId));
		modify($record){
			getCancerSummary().getTumorSummaryByIdentifier($newSummaryId).getPhenotype().addFact(FHIRConstants.HAS_CANCER_TYPE, tf)
		}
		
end   


rule  "set-Tumor-HistologicType"
	salience 45557
	no-loop true
	when
		$record : MedicalRecord()	
	
	    $tF : Fact(summaryType == "TumorSummary", documentType != "RecordSummary", $t_summaryId : summaryId)
	    $tpheF : Fact(summaryType == "TumorPhenotype", documentType != "RecordSummary", category == "hasHistologicType", containerIdentifier contains $t_summaryId)
	    IdMapper(oldSummaryId == $t_summaryId, $newSummaryId : newSummaryId)
	    $recordTFact : Fact(documentType == "RecordSummary", summaryType == "TumorSummary", summaryId == $newSummaryId)
	    not(Fact(documentType == "RecordSummary", summaryType == "TumorPhenotype", category == "hasHistologicType", provenanceFacts contains $tpheF))

	    
	then
		//tumor level
		
		String newId = "TumorPhenotype-"+$newSummaryId;
		Fact tf = FactFactory.createFact($tpheF, "Condition", OwlConstants.BREAST_CANCER_OWL+"#"+$tpheF.getName(), "RecordSummary");
		tf.setIdentifier(newId);
		tf.addContainerIdentifier($newSummaryId);
		tf.addProvenanceFact($tpheF);
		tf.setSummaryType("TumorPhenotype");
		insert(tf);
		insert(new IdMapper($tpheF.getIdentifier(), newId, $tpheF.getDocumentType(), $tpheF.getSummaryId(), newId));
		modify($record){
			getCancerSummary().getTumorSummaryByIdentifier($newSummaryId).getPhenotype().addFact(FHIRConstants.HAS_HISTOLOGIC_TYPE, tf)
		}
		
end   

rule  "set-Cancer-HistologicType"
	salience 45556
	no-loop true
	when
		$record : MedicalRecord()	
		$domain : Domain($domainName : domainName)
		$cancerFact : Fact(summaryType=="CancerSummary", documentType == "RecordSummary", name == $domainName, $cSummary_id : summaryId)
   		Fact(summaryType=="CancerPhenotype", documentType != "RecordSummary", category == "hasHistologicType")
	    not(Fact(summaryType=="CancerPhenotype", documentType == "RecordSummary", category == "hasHistologicType"))	
	    
	    $cHistFacts : Set()
	    from collect (Fact(summaryType=="CancerPhenotype", documentType != "RecordSummary", category == "hasHistologicType"))
	    
	then
		for(Object obj : $cHistFacts){
			Fact cF = (Fact)obj;
			Fact ctf = FactFactory.createFact(cF, "hasHistologicType", OwlConstants.BREAST_CANCER_OWL+"#"+cF.getName(), "RecordSummary");
			ctf.setIdentifier($cancerFact.getIdentifier());
			ctf.addProvenanceFact(cF);
			ctf.getContainerIdentifier().clear();
			ctf.addContainerIdentifier($cSummary_id);
			ctf.setSummaryType("CancerPhenotype");
			ctf.setSummaryId("CancerPhenotype-"+$cSummary_id);
			//insert(new IdMapper(cF.getIdentifier(), $cancerFact.getIdentifier(), cf.getDocumentType(), cf.getSummaryId(), $cSummary_id));
			
			FactHelper.addFactToSummary(ctf, $record.getCancerSummary(), $cancerFact.getIdentifier(), OwlConstants.BREAST_CANCER_OWL);
			insert(ctf);
		}
end   


/*
* Sets the most specific tumor diagnosis across documants
*/
rule  "set-Tumor-Diagnosis"
	salience 44444
	no-loop true
	when
		$record : MedicalRecord()	
		$domain : Domain($domainName : domainName)
		$cancerFact : Fact(summaryType=="CancerSummary", documentType == "RecordSummary", name == $domainName)
		
		$tF : Fact(summaryType == "TumorSummary", documentType != "RecordSummary", category == "hasDiagnosis", $deepName : name, $deepOldSummaryId : summaryId)
	    IdMapper(oldSummaryId == $deepOldSummaryId, $newSummaryId : newSummaryId)
	    not((Fact(this != $tF, summaryType == "TumorSummary", documentType != "RecordSummary", $name : name, 
	    		ancestors contains $deepName, $oldSummaryId : summaryId)
	    	&& IdMapper(oldSummaryId == $oldSummaryId, newSummaryId == $newSummaryId )	    		
	    	))
	    $recordTFact : Fact(documentType == "RecordSummary", summaryType == "TumorSummary", summaryId == $newSummaryId)
	    not(Fact(documentType == "RecordSummary", summaryType == "TumorSummary", category == "hasDiagnosis", provenanceFacts contains $tF))
	    
	    $$deepOldSummaryId : Set()
	    from collect (Fact(summaryType == "TumorSummary", documentType != "RecordSummary", category == "hasDiagnosis", name == $deepName, summaryId == $deepOldSummaryId))

	then
//System.out.println("in hasDiagnosis $deepName: "+$deepName +" $deepOldSummaryId: "+$deepOldSummaryId);
		for (Object obj: $$deepOldSummaryId){
			Fact diagnFact = (Fact)obj;
			//tumor level
			Fact tf = FactFactory.createFact(diagnFact, "hasDiagnosis", OwlConstants.BREAST_CANCER_OWL+"#"+$deepName, "RecordSummary");
			tf.addContainerIdentifier($newSummaryId);
			tf.setIdentifier(tf.getName()+"-"+$newSummaryId);
			tf.addProvenanceFact(diagnFact);
			tf.setSummaryId($newSummaryId);
			insert(new IdMapper(diagnFact.getIdentifier(), tf.getIdentifier(), diagnFact.getDocumentType(), diagnFact.getSummaryId(), tf.getSummaryId()));
			
			FactHelper.addFactToSummary(tf, $record.getCancerSummary(), $newSummaryId, OwlConstants.BREAST_CANCER_OWL);
			
			insert(tf);
		}
		
end  

rule  "set-Cancer-Diagnosis"
	salience 44445
	no-loop true
	when
		$record : MedicalRecord()	
		$domain : Domain($domainName : domainName)
		$cancerFact : Fact(summaryType=="CancerSummary", documentType == "RecordSummary", name == $domainName)
		
		$tF : Fact(summaryType == "CancerSummary", documentType != "RecordSummary", category == "hasDiagnosis", $deepName : name, $deepOldSummaryId : summaryId)
	    not((Fact(this != $tF, summaryType == "CancerSummary", documentType != "RecordSummary", $name : name, 
	    		ancestors contains $deepName) 		
	    	))
	    not(Fact(documentType == "RecordSummary", summaryType == "CancerSummary", category == "hasDiagnosis", provenanceFacts contains $tF))
	    
	    $$deepOldSummaryId : Set()
	    from collect (Fact(summaryType == "CancerSummary", documentType != "RecordSummary", category == "hasDiagnosis", name == $deepName, summaryId == $deepOldSummaryId))

	then
//System.out.println("in hasDiagnosis $deepName: "+$deepName +" $deepOldSummaryId: "+$deepOldSummaryId);
		for (Object obj: $$deepOldSummaryId){
			Fact diagnFact = (Fact)obj;
			
			//cancer level
			Fact ctf = FactFactory.createFact(diagnFact, "hasDiagnosis", OwlConstants.BREAST_CANCER_OWL+"#"+$deepName, "RecordSummary");
			ctf.setIdentifier($cancerFact.getIdentifier());
			ctf.getContainerIdentifier().clear();
			ctf.addContainerIdentifier($cancerFact.getSummaryId());
			ctf.addProvenanceFact(diagnFact);
			ctf.setSummaryType("CancerSummary");
			ctf.setSummaryId($cancerFact.getSummaryId());
			insert(new IdMapper(diagnFact.getIdentifier(), $cancerFact.getIdentifier(), diagnFact.getDocumentType(), diagnFact.getSummaryId(), $cancerFact.getSummaryId()));
			
			FactHelper.addFactToSummary(ctf, $record.getCancerSummary(), $cancerFact.getIdentifier(), OwlConstants.BREAST_CANCER_OWL);
			insert(ctf);
		}
		
end  

rule  "set-Tumor-TumorExtent"
	salience 45555
	no-loop true
	when
		$record : MedicalRecord()	
	
	    $tF : Fact(summaryType == "TumorSummary", documentType != "RecordSummary", $t_summaryId : summaryId)
	    $tpheF : Fact(summaryType == "TumorPhenotype", documentType != "RecordSummary", category == "hasTumorExtent", containerIdentifier contains $t_summaryId,
	    	rulesApplied not contains "setTumorExtent")
	    IdMapper(oldSummaryId == $t_summaryId, $newSummaryId : newSummaryId)
	    $recordTFact : Fact(documentType == "RecordSummary", summaryType == "TumorSummary", summaryId == $newSummaryId)
	    not(Fact(documentType == "RecordSummary", summaryType == "TumorPhenotype", category == "hasTumorExtent", provenanceFacts contains $tpheF))	    
	then
	System.out.print(".");
		modify($tpheF){	addRulesApplied("setTumorExtent") }
		//tumor level
		
		String newId = "TumorPhenotype-"+$newSummaryId;
		Fact tf = FactFactory.createFact($tpheF, "Condition", OwlConstants.BREAST_CANCER_OWL+"#"+$tpheF.getName(), "RecordSummary");
		tf.setIdentifier(newId);
		tf.addContainerIdentifier($newSummaryId);
		tf.addProvenanceFact($tpheF);
		tf.setSummaryType("TumorPhenotype");
		insert(tf);
		insert(new IdMapper($tpheF.getIdentifier(), newId, $tpheF.getDocumentType(), $tpheF.getSummaryId(), newId));
		modify($record){
			getCancerSummary().getTumorSummaryByIdentifier($newSummaryId).getPhenotype().addFact(FHIRConstants.HAS_TUMOR_EXTENT, tf)
		}
		
end   


rule  "set-Cancer-TumorExtent"
	salience 45554
	no-loop true
	when
		$record : MedicalRecord()	
		$domain : Domain($domainName : domainName)
		$cancerFact : Fact(summaryType=="CancerSummary", documentType == "RecordSummary", name == $domainName, $cSummary_id : summaryId)
   		Fact(summaryType=="CancerPhenotype", documentType != "RecordSummary", category == "hasTumorExtent")
	    not(Fact(summaryType=="CancerPhenotype", documentType == "RecordSummary", category == "hasTumorExtent"))	
	    
	    $cHistFacts : Set()
	    from collect (Fact(summaryType=="CancerPhenotype", documentType != "RecordSummary", category == "hasTumorExtent"))
	    
	then
		for(Object obj : $cHistFacts){
			Fact cF = (Fact)obj;
			Fact ctf = FactFactory.createFact(cF, "hasTumorExtent", OwlConstants.BREAST_CANCER_OWL+"#"+cF.getName(), "RecordSummary");
			ctf.setIdentifier($cancerFact.getIdentifier());
			ctf.addProvenanceFact(cF);
			ctf.getContainerIdentifier().clear();
			ctf.addContainerIdentifier($cSummary_id);
			ctf.setSummaryType("CancerPhenotype");
			ctf.setSummaryId("CancerPhenotype-"+$cSummary_id);
			
			FactHelper.addFactToSummary(ctf, $record.getCancerSummary(), $cancerFact.getIdentifier(), OwlConstants.BREAST_CANCER_OWL);
			insert(ctf);
		}
end   

/*
rule  "set-Tumor-umorExtent"
	salience 44440
	no-loop true
	when
		$record : MedicalRecord()	
		$domain : Domain($domainName : domainName)
		$cancerFact : Fact(summaryType=="CancerSummary", documentType == "RecordSummary", name == $domainName)
   
	    $tpheF : Fact(documentType != "RecordSummary", summaryType == "TumorPhenotype", category == "hasTumorExtent", $name : name)
	    $tF : Fact(summaryType == "TumorSummary", $t_summaryId : summaryId, documentType == "RecordSummary")
	    
	    
	    not(Fact(summaryType=="TumorPhenotype", documentType == "RecordSummary", category == "hasTumorExtent", name == $name, 
	    	containerIdentifier contains $t_summaryId))		
	    
	then
		//tumor level
		String newId = "TumorPhenotype-"+$t_summaryId;
		Fact tf = FactFactory.createFact($tpheF, "Condition", OwlConstants.BREAST_CANCER_OWL+"#"+$name, "RecordSummary");
		tf.setIdentifier(newId);
		tf.addContainerIdentifier($t_summaryId);
		tf.addProvenanceFact($tpheF);
		insert(tf);
		insert(new IdMapper($tpheF.getIdentifier(), newId, $tpheF.getDocumentType(), $tpheF.getSummaryId(), $t_summaryId));
		modify($record){
			getCancerSummary().getTumorSummaryByIdentifier($t_summaryId).getPhenotype().addFact(FHIRConstants.HAS_TUMOR_EXTENT, tf)
		}

end   
*/
		