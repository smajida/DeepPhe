package org.healthnlp.deepphe.summarization.drools.rules;

//list any import classes here.
import org.healthnlp.deepphe.summarization.drools.kb.*;
import org.healthnlp.deepphe.summarization.drools.kb.impl.*;

//
// Metastasis 
//    ref: https://healthnlp.hms.harvard.edu/cancer/wiki/index.php?title=Recurrence/Metastasis
//

// localRecurrence1-1 
//	
//  If tumor 1 is located on the right side of the body as tumor 2, 
//   then tumor 2 has tumor type local recurrence. 
//	
//  LocalRecurrence(?local), Tumor(?tumor1), Tumor(?tumor2),
//  BodySite(?site1), BodySite(?site2),
//  Right(?right), hasBodySite(?tumor1, ?site1),
//  hasBodyModifier(?site1, ?right),
//  hasBodySite(?tumor2, ?site2),
//  hasBodyModifier(?site2, ?right) -> hasTumorType(?tumor2, ?local) 
//

rule "006_localRecurrence1-1"
	salience 1000
	when
         KbGoal (name == "extract-metastasis",
                isActive > 0)
         KbPatient($patientId : id)
         LocalRecurrence($local : id, summarizableId == $patientId)
         Tumor($tumor1 : id, summarizableId == $patientId)
         Tumor($tumor2 : id,
                           summarizableId == $patientId,
                           $tumor1 != $tumor2)
         BodySite($site1 : id, summarizableId == $patientId)
         BodySite($site2 : id, summarizableId == $patientId, $site1 != $site2)
         HasBodySite(domainId == $tumor1, rangeId == $site1, summarizableId == $patientId)
         HasBodySite(domainId == $tumor2, rangeId == $site2, summarizableId == $patientId)
         Right($right1 : id, summarizableId == $patientId)
         Right($right2 : id, summarizableId == $patientId, $right1 != $right2)
         HasBodyModifier(domainId == $site1, rangeId == $right1, summarizableId == $patientId)
         HasBodyModifier(domainId == $site2, rangeId == $right2, summarizableId == $patientId)
         not HasTumorType(domainId == $tumor2, summarizableId == $patientId)
    then
        System.out.println("<DROOLS-ENGINE> 006_localRecurrence1-1 Fires... ");
        HasTumorType hasTumorType = new HasTumorTypeImpl();
        hasTumorType.setSummarizableId($patientId);
		hasTumorType.setDomainId($tumor2);
		hasTumorType.setRangeId($local);
        insert(hasTumorType);
    end

//
// localRecurrence1-2 	
//
// If tumor 1 is located on the left side of the body as tumor 2,
// then tumor 2 has tumor type local recurrence. 
//
// LocalRecurrence(?local), Tumor(?tumor1), Tumor(?tumor2),
// BodySite(?site1), BodySite(?site2), Left(?left),
// hasBodySite(?tumor1, ?site1), hasBodyModifier(?site1, ?left),
// hasBodySite(?tumor2, ?site2), hasBodyModifier(?site2, ?left)
// -> hasTumorType(?tumor2, ?local) 
//
rule "006_localRecurrence1-2"
	salience 1000
	when
         KbGoal (name == "extract-metastasis",
                isActive > 0)
         KbPatient($patientId : id)
         LocalRecurrence($local : id, summarizableId == $patientId)
         Tumor($tumor1 : id, summarizableId == $patientId)
         Tumor($tumor2 : id,
                           summarizableId == $patientId,
                           $tumor1 != $tumor2)
         BodySite($site1 : id, summarizableId == $patientId)
         BodySite($site2 : id, summarizableId == $patientId, $site1 != $site2)
         HasBodySite(domainId == $tumor1, rangeId == $site1, summarizableId == $patientId)
         HasBodySite(domainId == $tumor2, rangeId == $site2, summarizableId == $patientId)
         Left($left1 : id, summarizableId == $patientId)
         Left($left2 : id, summarizableId == $patientId, $left1 != $left2)
         HasBodyModifier(domainId == $site1, rangeId == $left1, summarizableId == $patientId)
         HasBodyModifier(domainId == $site2, rangeId == $left2, summarizableId == $patientId)
         not HasTumorType(domainId == $tumor2, summarizableId == $patientId)
    then
        System.out.println("<DROOLS-ENGINE> 006_localRecurrence1-2 Fires... ");
        HasTumorType hasTumorType = new HasTumorTypeImpl();
        hasTumorType.setSummarizableId($patientId);
		hasTumorType.setDomainId($tumor2);
		hasTumorType.setRangeId($local);
        insert(hasTumorType);
    end

//
// secondPrimary1-1
// 	
// If tumor 1 is located on the right side of the body and tumor 2 is on the left,
// then tumor 2 has tumor type primary tumor.
//
// PrimaryTumor(?primary), Tumor(?tumor1), Tumor(?tumor2),
// BodySite(?site1), BodySite(?site2), Right(?right), Left(?left),
// hasBodySite(?tumor1, ?site1), hasBodyModifier(?site1, ?right),
// hasBodySite(?tumor2, ?site2), hasBodyModifier(?site2, ?left) 
// -> hasTumorType(?tumor2, ?primary)
// 
rule "006_secondPrimary1-1"
	salience 1000
	when
         KbGoal (name == "extract-metastasis",
                isActive > 0)
         KbPatient($patientId : id)
         PrimaryTumor($primary : id, summarizableId == $patientId)
         Tumor($tumor1 : id, summarizableId == $patientId)
         Tumor($tumor2 : id,
                           summarizableId == $patientId,
                           $tumor1 != $tumor2)
         BodySite($site1 : id, summarizableId == $patientId)
         BodySite($site2 : id, summarizableId == $patientId, $site1 != $site2)
         Right($right : id, summarizableId == $patientId)
         Left($left : id, summarizableId == $patientId)
         HasBodySite(domainId == $tumor1, rangeId == $site1, summarizableId == $patientId)
         HasBodyModifier(domainId == $site1, rangeId == $right, summarizableId == $patientId)
         HasBodySite(domainId == $tumor2, rangeId == $site2, summarizableId == $patientId)
         HasBodyModifier(domainId == $site2, rangeId == $left, summarizableId == $patientId)
         not HasTumorType(domainId == $tumor2, summarizableId == $patientId)
    then
        System.out.println("<DROOLS-ENGINE> 006_secondPrimary1-1 Fires... ");
        HasTumorType hasTumorType = new HasTumorTypeImpl();
        hasTumorType.setSummarizableId($patientId);
		hasTumorType.setDomainId($tumor2);
		hasTumorType.setRangeId($primary);
        insert(hasTumorType);
    end

//
// secondPrimary1-2
//
// If tumor 1 is located on the left side of the body and tumor 2 is on the right,
// then tumor 2 has tumor type primary tumor.
//
// PrimaryTumor(?primary), Tumor(?tumor1), Tumor(?tumor2),
// BodySite(?site1), BodySite(?site2),
// Right(?right), Left(?left),
// hasBodySite(?tumor1, ?site1), hasBodyModifier(?site1, ?left),
// hasBodySite(?tumor2, ?site2), hasBodyModifier(?site2, ?right) 
//-> hasTumorType(?tumor2, ?primary) 
//
rule "006_secondPrimary1-2"
	salience 1000
	when
         KbGoal (name == "extract-metastasis",
                isActive > 0)
         KbPatient($patientId : id)
         PrimaryTumor($primary : id, summarizableId == $patientId)
         Tumor($tumor1 : id, summarizableId == $patientId)
         Tumor($tumor2 : id,
                           summarizableId == $patientId,
                           $tumor1 != $tumor2)
         BodySite($site1 : id, summarizableId == $patientId)
         BodySite($site2 : id, summarizableId == $patientId, $site1 != $site2)
         Right($right : id, summarizableId == $patientId)
         Left($left : id, summarizableId == $patientId)
         HasBodySite(domainId == $tumor1, rangeId == $site1, summarizableId == $patientId)
         HasBodyModifier(domainId == $site1, rangeId == $left, summarizableId == $patientId)
         HasBodySite(domainId == $tumor2, rangeId == $site2, summarizableId == $patientId)
         HasBodyModifier(domainId == $site2, rangeId == $right, summarizableId == $patientId)
         not HasTumorType(domainId == $tumor2, summarizableId == $patientId)
    then
        System.out.println("<DROOLS-ENGINE> 006_secondPrimary1-2 Fires... ");
        HasTumorType hasTumorType = new HasTumorTypeImpl();
        hasTumorType.setSummarizableId($patientId);
		hasTumorType.setDomainId($tumor2);
		hasTumorType.setRangeId($primary);
        insert(hasTumorType);
    end


